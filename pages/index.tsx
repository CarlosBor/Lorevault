import Head from 'next/head'
import { useRouter } from 'next/router';
import styles from './index.module.css';
import NavMenu from '@/components/NavMenu';
import CardTable from '@/components/CardTable';
import SearchBar from '@/components/SearchBar';
import Link from 'next/link';
import { useState, useEffect } from 'react';

//What I want now:

//Then I can filter those results
//Cheers I know how to filter results!
//

//THEN I can make the elements of the menu do DB calls
//THEN I can add items to those DB entries
//THEN I can add a header to navigate the site
export default function Home() {
  const router = useRouter();
  const [query, setQuery] = useState('');
  const [cardInfo, setCardInfo] = useState([]);

//  const [defaultQuery, setDefaultQuery] = useState(router.query.searchToken);

  //This is how I make the component read the query URL.
  //Make a "create link" button and use this to share.
  //Different type of post ( maps, chars etc) may use a special, second filter. Radiobutton
    const fetchData = async (query:string) => {
      //This returns the raw response
      const cardInfoQuery = await fetch(`/api/queryLorevault?name=${query}`);
      //This is a query with a search parameter, for future reference
      //    const cardInfoQuery = await fetch(`/api/queryLorevault?productId=${query}`);

      //This parses it into a more readable object
      const cardInfoQueryJson = await cardInfoQuery.json();
      //It crashes. The problem is that reactjs doesn't play well with using objects in useState
      setCardInfo(cardInfoQueryJson);
    }

  //Perform query when data changes
  useEffect(()=>{
    fetchData(query);
  },[query]);

  //Load URL params as query on page load
  useEffect(()=>{
    setQuery(router.query.searchToken?.toString() || '');
  },[router.query]);
  
  const grabSearchValue = (value: string) => {
    setQuery(value);
  }

  return (
    <>
      <Head>
        <title>Lorevault</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.header}>
          <h2>Lorevault</h2>
          <SearchBar sendSearchValue={grabSearchValue} initialValue={query}/>
          <Link href="/AddItem">Add Item</Link>
          <span>AccStuff</span>
        </div>
      <main className={styles.main}>
        <NavMenu/> 
        <CardTable cardInfo={cardInfo}/>
      </main>
    </>
  )
}
